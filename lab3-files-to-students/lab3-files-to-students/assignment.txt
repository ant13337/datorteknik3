4.1 Inmatning
De rutiner som ska implementeras för inmatning är följande:

4.1.1 inImage
Rutinen ska läsa in en ny textrad från tangentbordet till er inmatningsbuffert för indata
och nollställa den aktuella positionen i den. De andra inläsningsrutinerna kommer sedan att
jobba mot den här bufferten. Om inmatningsbufferten är tom eller den aktuella positionen
är vid buffertens slut när någon av de andra inläsningsrutinerna nedan anropas ska inImage
anropas av den rutinen, så att det alltid finns ny data att arbeta med.

4.1.2 getInt
Rutinen ska tolka en sträng som börjar på aktuell buffertposition i inbufferten och fortsätta
tills ett tecken som inte kan ingå i ett heltal påträffas. Den lästa substrängen översätts till
heltalsformat och returneras. Positionen i bufferten ska vara det första tecken som inte
ingick i det lästa talet när rutinen lämnas. Inledande blanktecken i talet ska vara tillåtna.

Ett plustecken eller ett minustecken ska kunna inleda talet och vara direkt följt av en eller
flera heltalssiffror. Ett tal utan inledande plus eller minus ska alltid tolkas som positivt.
Om inmatningsbufferten är tom eller om den aktuella positionen i inmatningsbufferten
är vid dess slut vid anrop av getInt ska getInt kalla på inImage, så att getInt alltid
returnerar värdet av ett inmatat tal.
Returvärde: inläst heltal

4.1.3 getText
Rutinen ska överföra maximalt n tecken från aktuell position i inbufferten och framåt till
minnesplats med början vid buf. När rutinen lämnas ska aktuell position i inbufferten vara
första tecknet efter den överförda strängen. Om det inte finns n st. tecken kvar i inbufferten
avbryts överföringen vid slutet av bufferten. Returnera antalet verkligt överförda tecken.
Om inmatningsbufferten är tom eller aktuell position i den är vid buffertens slut vid anrop
av getText ska getText kalla på inImage, så att getText alltid läser över någon sträng
till minnesutrymmet sombuf pekar till. Kom ihåg att en sträng per definition är NULLterminerad.
Parameter 1: adress till minnesutrymme att kopiera sträng till från inmatningsbufferten
(buf i texten)
Parameter 2: maximalt antal tecken att läsa från inmatningsbufferten (n i texten)
Returvärde: antal överförda tecken

4.1.4 getChar
Rutinen ska returnera ett tecken från inmatningsbuffertens aktuella position och flytta
fram aktuell position ett steg i inmatningsbufferten ett steg. Om inmatningsbufferten är
tom eller aktuell position i den är vid buffertens slut vid anrop av getChar ska getChar
kalla på inImage, så att getChar alltid returnerar ett tecken ur inmatningsbufferten.
Returvärde: inläst tecken

4.1.5 getInPos
Rutinen ska returnera aktuell buffertposition för inbufferten.
Returvärde: aktuell buffertposition (index)

4.1.6 setInPos
Rutinen ska sätta aktuell buffertposition för inbufferten till n. n måste dock ligga i intervallet [0,MAXPOS], där MAXPOS beror av buffertens faktiska storlek. Om n<0, sätt positionen
till 0, om n>MAXPOS, sätt den till MAXPOS.
Parameter: önskad aktuell buffertposition (index), n i texten.



4.2 Utmatning << vad fan menas med utmaning ???
De rutiner som ska implementeras för utmatning är följande:

4.2.1 outImage
Rutinen ska skriva ut strängen som ligger i utbufferten i terminalen. Om någon av de
övriga utdatarutinerna når buffertens slut, så ska ett anrop till outImage göras i dem, så
att man får en tömd utbuffert att jobba mot.

4.2.2 putInt
Rutinen ska lägga ut talet n som sträng i utbufferten från och med buffertens aktuella
position. Glöm inte att uppdatera aktuell position innan rutinen lämnas.
Parameter: tal som ska läggas in i bufferten (n i texten)

4.2.3 putText
Rutinen ska lägga textsträngen som finns i buf från och med den aktuella positionen i
utbufferten. Glöm inte att uppdatera utbuffertens aktuella position innan rutinen lämnas.
Om bufferten blir full så ska ett anrop till outImage göras, så att man får en tömd utbuffert
att jobba vidare mot.
Parameter: adress som strängen ska hämtas till utbufferten ifrån (buf i texten)

4.2.4 putChar
Rutinen ska lägga tecknet c i utbufferten och flytta fram aktuell position i den ett steg.
Om bufferten blir full när getChar anropas ska ett anrop till outImage göras, så att man
får en tömd utbuffert att jobba vidare mot.
Parameter: tecknet som ska läggas i utbufferten (c i texten)

4.2.5 getOutPos
Rutinen ska returnera aktuell buffertposition för utbufferten.
Returvärde: aktuell buffertposition (index)

4.2.6 setOutPos
Rutinen ska sätta aktuell buffertposition för utbufferten till n. n måste dock ligga i intervallet [0,MAXPOS], där MAXPOS beror av utbuffertens storlek. Om n<0 sätt den till 0, om
n>MAXPOS sätt den till MAXPOS.
Parameter: önskad aktuell buffertposition (index), n i texten

4.3 Körexempel med testprogrammet
När programmet testas kan en lyckad körning med biblioteket kompilerat och länkat ihop
med testprogrammet se ut som något i stil med det här (användarinmatningar är återgivna
i kursiv stil):
Körexempel
Start av testprogram. Skriv in 5 tal!
1 2 -47
5 7 Kalle
1+2-47+5+7=-32
Kalle
125
Testprogram slut
